# Data Science Tools and Ecosystem Summary

## Objectives:

1. List popular languages for Data Science
2. List commonly used libraries in Data Science
3. Create a table of Data Science tools
4. Provide examples of Data Science environments
5. Summarize key concepts and tools used in Data Science

## Popular Languages for Data Science:

- Python
- R
- SQL
- Julia
- Scala

## Commonly Used Libraries in Data Science:

- NumPy
- Pandas
- Matplotlib
- Scikit-learn
- TensorFlow
- Keras

## Data Science Tools:

| Tool Name        | Description                                   |
|------------------|-----------------------------------------------|
| Jupyter Notebook | Interactive notebook for data science         |
| RStudio          | Integrated development environment for R       |
| Apache Zeppelin  | Web-based notebook for data analytics and viz |

## Data Science Environments:

- Jupyter Notebook
- RStudio
- Apache Zeppelin

## Key Concepts and Tools:

- Python: A versatile language used for data manipulation, analysis, and visualization.
- R: A language and environment for statistical computing and graphics.
- SQL: A domain-specific language used in programming and managing data held in a relational database management system.
- NumPy: A library for the Python programming language, adding support for large, multi-dimensional arrays and matrices, along with a collection of mathematical functions to operate on these arrays.
- Pandas: A fast, powerful, flexible, and easy-to-use open-source data manipulation and data analysis library built on top of Python.
- Matplotlib: A plotting library for creating static, animated, and interactive visualizations in Python.
- Scikit-learn: A machine learning library for the Python programming language.
- TensorFlow: An open-source software library for dataflow and differentiable programming across a range of tasks.
- Keras: An open-source deep learning library written in Python, capable of running on top of TensorFlow.

## Examples of Evaluating Arithmetic Expressions in Python:

### Example 1: Multiply then add integers

```python
result = (3 * 4) + 5
print(result)
# Output: 17

